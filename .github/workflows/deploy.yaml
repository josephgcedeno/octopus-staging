name: Build Static Website branch from Octopus

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["feature/deployment-flutter-web"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.7.8"

      - name: Clean flutter to be able to generate flutter.js every build
        run: flutter clean

      - name: Install dependencies
        run: flutter pub get

      - name: Build serialize data
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build web
        run: |
          if [ "${{ vars.API_ENV }}" = "staging" ]; then
            echo "STAGING_APP_ID=${{ vars.STAGING_APP_ID }}" >> .env
            echo "STAGING_SERVER_URL=${{ vars.STAGING_SERVER_URL }}" >> .env
            echo "STAGING_MASTER_KEY=${{ vars.STAGING_MASTER_KEY }}" >> .env
            echo "STAGING_ENCRYPTION_KEY=${{ vars.STAGING_ENCRYPTION_KEY }}" >> .env
            echo "STAGING_PARSE_SERVER_API=${{ vars.STAGING_PARSE_SERVER_API }}" >> .env
          else
            echo "APP_ID=${{ vars.APP_ID }}" >> .env
            echo "SERVER_URL=${{ vars.SERVER_URL }}" >> .env
            echo "MASTER_KEY=${{ vars.MASTER_KEY }}" >> .env
            echo "ENCRYPTION_KEY=${{ vars.ENCRYPTION_KEY }}" >> .env
            echo "PARSE_SERVER_API=${{ vars.PARSE_SERVER_API }}" >> .env
          fi
          echo "API_ENV=${{ vars.API_ENV }}" >> .env

          flutter build web --release

      - name: Set Publish Branch
        id: set_publish_branch
        run: |
          if [ "${{ vars.API_ENV }}" = "staging" ]; then
            echo "publish_branch=release/flutter-web-staging" >> $GITHUB_ENV
          else
            echo "publish_branch=release/flutter-web-production" >> $GITHUB_ENV
          fi

      - name: Deploy to GitHub Pages/Branch for release
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PAT_TOKEN }} # We use Personal access token instead of Github token since it is set to create a branch container the static page generated from flutter
          publish_dir: build/web
          publish_branch: ${{ env.publish_branch }}
